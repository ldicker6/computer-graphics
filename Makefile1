TARGET = Assignment1
DEPENDENDENT_DIRS = Image Util
SOURCE = main1.cpp

CFLAGS += -I. -I.. -std=c++20 -Wunused-result -I/opt/homebrew/opt/jpeg/include
LFLAGS += -L. -lUtil -lImage -ljpeg -L/opt/homebrew/opt/jpeg/lib


CFLAGS_DEBUG = -DDEBUG -g3
LFLAGS_DEBUG =
CFLAGS_RELEASE = -O3 -DRELEASE -funroll-loops -ffast-math -DNDEBUG
LFLAGS_RELEASE = -O3 

SRC = ./
BIN = ./
BIN_O = ./Bin/Linux/Release/$(TARGET)/
INCLUDE = /usr/include/

CC  = gcc
CXX = g++
MD  = mkdir
AR  = ar

OBJECTS=$(addprefix $(BIN_O), $(addsuffix .o, $(basename $(SOURCE))))

all: CFLAGS += $(CFLAGS_RELEASE)
all: LFLAGS += $(LFLAGS_RELEASE)
all: $(BIN)
all: $(BIN_O)
all: $(BIN)$(TARGET)

debug: CFLAGS += $(CFLAGS_DEBUG)
debug: LFLAGS += $(LFLAGS_DEBUG)
debug: $(BIN)
debug: $(BIN_O)
debug: $(BIN)$(TARGET)

clean:
	rm -f $(BIN)$(TARGET)
	rm -f $(OBJECTS)
	for dir in $(DEPENDENDENT_DIRS); do make clean -C $$dir; done

depend:
	for dir in $(DEPENDENDENT_DIRS); do make depend -C $$dir; done
	makedepend -- $(CFLAGS) -- -I../SVD -I../Util -I../Image -Y $(SOURCE)

$(BIN):
	$(MD) -p $(BIN)

$(BIN_O):
	$(MD) -p $(BIN_O)

$(BIN)$(TARGET): $(OBJECTS)
	for dir in $(DEPENDENDENT_DIRS); do make -C $$dir; done
	$(CXX) -o $@ $(OBJECTS) $(LFLAGS)

$(BIN_O)%.o: $(SRC)%.c
	$(CC) -c -o $@ $(CFLAGS) -I$(INCLUDE) $<

$(BIN_O)%.o: $(SRC)%.cpp
	$(CXX) -c -o $@ $(CFLAGS) -I$(INCLUDE) $<
